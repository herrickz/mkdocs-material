{
    "docs": [
        {
            "location": "/codehilite/",
            "text": "CodeHilite\n\u00b6\n\n\nCodeHilite\n is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.\n\n\n\n\nSyntax highlighting not working?\n\n\nPlease ensure that \nPygments\n is installed. See the next section for\nfurther directions on how to set up Pygments or use the official\n\nDocker image\n with all dependencies pre-installed.\n\n\n\n\nInstallation\n\u00b6\n\n\nCodeHilite parses code blocks and wraps them in \npre\n tags. If \nPygments\n\nis installed, which is a generic syntax highlighter with support for over\n\n300 languages\n, CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:\n\n\n1\npip install pygments\n\n\n\n\n\n\nTo enable CodeHilite, add the following lines to your \nmkdocs.yml\n:\n\n\n1\n2\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite\n\n\n\n\n\n\n\nUsage\n\u00b6\n\n\nSpecifying the language\n\u00b6\n\n\nThe CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.\n\n\nvia Markdown syntax \nrecommended\n\u00b6\n\n\nIn Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.\n\n\nExample:\n\n\n1\n2\n3\n``` python\nimport tensorflow as tf\n```\n\n\n\n\n\n\nResult:\n\n\n1\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\n\nvia Shebang\n\u00b6\n\n\nAlternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.\n\n\nExample:\n\n\n1\n2\n    #!/usr/bin/python\n    import tensorflow as tf\n\n\n\n\n\n\nResult:\n\n\n1\n2\n#!/usr/bin/python\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\n\nvia three colons\n\u00b6\n\n\nIf the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.\n\n\nExample:\n\n\n1\n2\n    :::python\n    import tensorflow as tf\n\n\n\n\n\n\nResult:\n\n\n1\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\n\nAdding line numbers\n\u00b6\n\n\nLine numbers can be added by enabling the \nlinenums\n flag in your \nmkdocs.yml\n:\n\n\n1\n2\n3\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite\n:\n\n      \nlinenums:true\n\n\n\n\n\n\n\nExample:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n``` python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nHighlighting specific lines\n\u00b6\n\n\nSpecific lines can be highlighted by passing the line numbers to the \nhl_lines\n\nargument placed right after the language identifier. Line counts start at 1.\n\n\nExample:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nSupported languages \nexcerpt\n\u00b6\n\n\nCodeHilite uses \nPygments\n, a generic syntax highlighter with support for\nover \n300 languages\n, so the following list of examples is just an excerpt.\n\n\nBash\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n#!/bin/bash\n\n\n\nfor\n OPT in \n\"\n$@\n\"\n\n\ndo\n\n  \ncase\n \n\"\n$OPT\n\"\n in\n    \n'-f'\n \n)\n  \ncanonicalize\n=\n1\n \n;;\n\n    \n'-n'\n \n)\n  \nswitchlf\n=\n\"-n\"\n \n;;\n\n  \nesac\n\n\ndone\n\n\n\n# readlink -f\n\n\nfunction\n __readlink_f \n{\n\n  \ntarget\n=\n\"\n$1\n\"\n\n  \nwhile\n \ntest\n -n \n\"\n$target\n\"\n;\n \ndo\n\n    \nfilepath\n=\n\"\n$target\n\"\n\n    \ncd\n \n`\ndirname \n\"\n$filepath\n\"\n`\n\n    \ntarget\n=\n`\nreadlink \n\"\n$filepath\n\"\n`\n\n  \ndone\n\n  /bin/echo \n$switchlf\n \n`\npwd\n -P\n`\n/\n`\nbasename \n\"\n$filepath\n\"\n`\n\n\n}\n\n\n\nif\n \n[\n ! \n\"\n$canonicalize\n\"\n \n]\n;\n \nthen\n\n  readlink \n$switchlf\n \n\"\n$@\n\"\n\n\nelse\n\n  \nfor\n file in \n\"\n$@\n\"\n\n  \ndo\n\n    \ncase\n \n\"\n$file\n\"\n in\n      -* \n)\n  \n;;\n\n      *  \n)\n  __readlink_f \n\"\n$file\n\"\n \n;;\n\n    \nesac\n\n    \ndone\n\n\nfi\n\n\n\nexit\n \n$?\n\n\n\n\n\n\n\nC\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\nextern\n \nsize_t\n\n\npb_varint_scan\n(\nconst\n \nuint8_t\n \ndata\n[],\n \nsize_t\n \nleft\n)\n \n{\n\n  \nassert\n(\ndata\n \n&&\n \nleft\n);\n\n  \nleft\n \n=\n \nleft\n \n>\n \n10\n \n?\n \n10\n \n:\n \nleft\n;\n\n\n\n#ifdef __SSE2__\n\n\n  \n/* Mapping: remaining bytes ==> bitmask */\n\n  \nstatic\n \nconst\n \nint\n \nmask_map\n[]\n \n=\n \n{\n\n    \n0x0000\n,\n \n0x0001\n,\n \n0x0003\n,\n \n0x0007\n,\n\n    \n0x000F\n,\n \n0x001F\n,\n \n0x003F\n,\n \n0x007F\n,\n\n    \n0x00FF\n,\n \n0x01FF\n,\n \n0x03FF\n\n  \n};\n\n\n  \n/* Load buffer into 128-bit integer and create high-bit mask */\n\n  \n__m128i\n \ntemp\n \n=\n \n_mm_loadu_si128\n((\nconst\n \n__m128i\n \n*\n)\ndata\n);\n\n  \n__m128i\n \nhigh\n \n=\n \n_mm_set1_epi8\n(\n0x80\n);\n\n\n  \n/* Intersect and extract mask with high-bits set */\n\n  \nint\n \nmask\n \n=\n \n_mm_movemask_epi8\n(\n_mm_and_si128\n(\ntemp\n,\n \nhigh\n));\n\n  \nmask\n \n=\n \n(\nmask\n \n&\n \nmask_map\n[\nleft\n])\n \n^\n \nmask_map\n[\nleft\n];\n\n\n  \n/* Count trailing zeroes */\n\n  \nreturn\n \nmask\n \n?\n \n__builtin_ctz\n(\nmask\n)\n \n+\n \n1\n \n:\n \n0\n;\n\n\n\n#else\n\n\n  \n/* Linear scan */\n\n  \nsize_t\n \nsize\n \n=\n \n0\n;\n\n  \nwhile\n \n(\ndata\n[\nsize\n++\n]\n \n&\n \n0x80\n)\n\n    \nif\n \n(\n!--\nleft\n)\n\n      \nreturn\n \n0\n;\n\n  \nreturn\n \nsize\n;\n\n\n\n#endif \n/* __SSE2__ */\n\n\n\n}\n\n\n\n\n\n\n\nC++\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\nExtension\n::\n\n\nExtension\n(\nconst\n \nDescriptor\n \n*\ndescriptor\n,\n \nconst\n \nDescriptor\n \n*\nscope\n)\n \n:\n\n    \ndescriptor_\n(\ndescriptor\n),\n\n    \nscope_\n(\nscope\n)\n \n{\n\n\n  \n/* Extract full name for signature */\n\n  \nvariables_\n[\n\"signature\"\n]\n \n=\n \ndescriptor_\n->\nfull_name\n();\n\n\n  \n/* Prepare message symbol */\n\n  \nvariables_\n[\n\"message\"\n]\n \n=\n \nStringReplace\n(\n\n    \nvariables_\n[\n\"signature\"\n],\n \n\".\"\n,\n \n\"_\"\n,\n \ntrue\n);\n\n  \nLowerString\n(\n&\n(\nvariables_\n[\n\"message\"\n]));\n\n\n  \n/* Suffix scope to identifiers, if given */\n\n  \nstring\n \nsuffix\n \n(\n\"\"\n);\n\n  \nif\n \n(\nscope_\n)\n \n{\n\n    \nsuffix\n \n=\n \nscope_\n->\nfull_name\n();\n\n\n    \n/* Check if the base and extension types are in the same package */\n\n    \nif\n \n(\n!\nscope_\n->\nfile\n()\n->\npackage\n().\ncompare\n(\ndescriptor_\n->\nfile\n()\n->\npackage\n()))\n\n      \nsuffix\n \n=\n \nStripPrefixString\n(\nsuffix\n,\n\n        \nscope_\n->\nfile\n()\n->\npackage\n()\n \n+\n \n\".\"\n);\n\n\n    \n/* Append to signature */\n\n    \nvariables_\n[\n\"signature\"\n]\n \n+=\n \n\".[\"\n \n+\n \nsuffix\n \n+\n\"]\"\n;\n\n    \nsuffix\n \n=\n \n\"_\"\n \n+\n \nsuffix\n;\n\n  \n}\n\n\n  \n/* Prepare extension symbol */\n\n  \nvariables_\n[\n\"extension\"\n]\n \n=\n \nStringReplace\n(\n\n    \nsuffix\n,\n \n\".\"\n,\n \n\"_\"\n,\n \ntrue\n);\n\n  \nLowerString\n(\n&\n(\nvariables_\n[\n\"extension\"\n]));\n\n\n}\n\n\n\n\n\n\n\nC#\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\npublic\n \nstatic\n \nvoid\n \nSend\n(\n\n    \nSocket\n \nsocket\n,\n \nbyte\n[]\n \nbuffer\n,\n \nint\n \noffset\n,\n \nint\n \nsize\n,\n \nint\n \ntimeout\n)\n \n{\n\n  \nint\n \nstartTickCount\n \n=\n \nEnvironment\n.\nTickCount\n;\n\n  \nint\n \nsent\n \n=\n \n0\n;\n\n  \ndo\n \n{\n\n    \nif\n \n(\nEnvironment\n.\nTickCount\n \n>\n \nstartTickCount\n \n+\n \ntimeout\n)\n\n      \nthrow\n \nnew\n \nException\n(\n\"Timeout.\"\n);\n\n    \ntry\n \n{\n\n      \nsent\n \n+=\n \nsocket\n.\nSend\n(\nbuffer\n,\n \noffset\n \n+\n \nsent\n,\n\n        \nsize\n \n-\n \nsent\n,\n \nSocketFlags\n.\nNone\n);\n\n    \n}\n \ncatch\n \n(\nSocketException\n \nex\n)\n \n{\n\n      \nif\n \n(\nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nWouldBlock\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nIOPending\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nNoBufferSpaceAvailable\n)\n \n{\n\n        \n/* Socket buffer is probably full, wait and try again */\n\n        \nThread\n.\nSleep\n(\n30\n);\n\n      \n}\n \nelse\n \n{\n\n        \nthrow\n \nex\n;\n\n      \n}\n\n    \n}\n\n  \n}\n \nwhile\n \n(\nsent\n \n<\n \nsize\n);\n\n\n}\n\n\n\n\n\n\n\nClojure\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n(\nclojure-version\n)\n\n\n\n(\ndefn \npartition-when\n\n  \n[\nf\n]\n\n  \n(\nfn \n[\nrf\n]\n\n    \n(\nlet \n[\na\n \n(\njava.util.ArrayList.\n)\n\n          \nfval\n \n(\nvolatile!\n \nfalse\n)]\n\n      \n(\nfn\n\n        \n([]\n \n(\nrf\n))\n\n        \n([\nresult\n]\n\n           \n(\nlet \n[\nresult\n \n(\nif \n(\n.isEmpty\n \na\n)\n\n                          \nresult\n\n                          \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                            \n;; Clear first\n\n                            \n(\n.clear\n \na\n)\n\n                            \n(\nunreduced\n \n(\nrf\n \nresult\n \nv\n))))]\n\n             \n(\nrf\n \nresult\n)))\n\n        \n([\nresult\n \ninput\n]\n\n            \n(\nif-not \n(\nand \n(\nf\n \ninput\n)\n  \n@\nfval\n)\n\n               \n(\ndo\n\n                 \n(\nvreset!\n \nfval\n \ntrue\n)\n\n                 \n(\n.add\n \na\n \ninput\n)\n\n                 \nresult\n)\n\n               \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                 \n(\n.clear\n \na\n)\n\n                 \n(\nlet \n[\nret\n \n(\nrf\n \nresult\n \nv\n)]\n\n                   \n(\nwhen-not \n(\nreduced?\n \nret\n)\n\n                     \n(\n.add\n \na\n \ninput\n))\n\n                   \nret\n))))))))\n\n\n\n\n(\ninto \n[]\n \n(\npartition-when\n\n          \n#\n(\n.startsWith\n \n%\n \n\">>\"\n))\n\n          \n[\n\"1d\"\n \n\"33\"\n \n\">> 1\"\n \n\">> 2\"\n \n\"22\"\n \n\">> 3\"\n])\n\n\n\n\n\n\n\nDiff\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\nIndex: grunt.js\n\n\n===================================================================\n\n\n--- grunt.js    (revision 31200)\n\n\n+++ grunt.js    (working copy)\n\n\n@@ -12,6 +12,7 @@\n\n\n module.exports = function (grunt) {\n\n\n+  console.log('hello world');\n\n   // Project configuration.\n   grunt.initConfig({\n     lint: {\n\n@@ -19,10 +20,6 @@\n\n         'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ],\n\n-      scripts: [\n\n\n-        'grunt.js',\n\n\n-        'db/**/*.js'\n\n\n-      ],\n\n       browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',\n\n\n\n\n\n\nDocker\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\nFROM\n ubuntu\n\n\n\n# Install vnc, xvfb in order to create a 'fake' display and firefox\n\n\nRUN\n apt-get update \n&&\n apt-get install -y x11vnc xvfb firefox\n\nRUN\n mkdir ~/.vnc\n\n\n# Setup a password\n\n\nRUN\n x11vnc -storepasswd \n1234\n ~/.vnc/passwd\n\n\n# Autostart firefox (might not be the best way, but it does the trick)\n\n\nRUN\n bash -c \n'echo \"firefox\" >> /.bashrc'\n\n\n\nEXPOSE\n 5900\n\n\nCMD\n [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]\n\n\n\n\n\n\n\nElixir\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\nrequire\n \nLogger\n\n\n\ndef\n \naccept\n(\nport\n)\n \ndo\n\n  \n{\n:ok\n,\n \nsocket\n}\n \n=\n \n:gen_tcp\n.\nlisten\n(\nport\n,\n\n                    \n[\n:binary\n,\n \npacket\n:\n \n:line\n,\n \nactive\n:\n \nfalse\n,\n \nreuseaddr\n:\n \ntrue\n])\n\n  \nLogger\n.\ninfo\n \n\"Accepting connections on port \n#{\nport\n}\n\"\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nloop_acceptor\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \nclient\n}\n \n=\n \n:gen_tcp\n.\naccept\n(\nsocket\n)\n\n  \nserve\n(\nclient\n)\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nserve\n(\nsocket\n)\n \ndo\n\n  \nsocket\n\n  \n|>\n \nread_line\n()\n\n  \n|>\n \nwrite_line\n(\nsocket\n)\n\n\n  \nserve\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nread_line\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \ndata\n}\n \n=\n \n:gen_tcp\n.\nrecv\n(\nsocket\n,\n \n0\n)\n\n  \ndata\n\n\nend\n\n\n\ndefp\n \nwrite_line\n(\nline\n,\n \nsocket\n)\n \ndo\n\n  \n:gen_tcp\n.\nsend\n(\nsocket\n,\n \nline\n)\n\n\nend\n\n\n\n\n\n\n\nErlang\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\ncircular\n(\nDefs\n)\n \n->\n\n  \n[\n \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n||\n\n    \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n<-\n \nDefs\n,\n \nType\n \n==\n \nmsg\n,\n \ncircular\n(\nBase\n,\n \nDefs\n)\n \n].\n\n\n\ncircular\n(\nBase\n,\n \nDefs\n)\n \n->\n\n  \nFields\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nBase\n \n},\n \nDefs\n),\n\n  \ncircular\n(\nDefs\n,\n \nFields\n,\n \n[\nBase\n]).\n\n\n\ncircular\n(_\nDefs\n,\n \n[],\n \n_\nPath\n)\n \n->\n\n  \nfalse\n;\n\n\ncircular\n(\nDefs\n,\n \n[\nField\n \n|\n \nFields\n],\n \nPath\n)\n \n->\n\n  \ncase\n \nField\n#field.type\n \nof\n\n    \n{\n \nmsg\n,\n \nType\n \n}\n \n->\n\n      \ncase\n \nlists\n:\nmember\n(\nType\n,\n \nPath\n)\n \nof\n\n        \nfalse\n \n->\n\n          \nChildren\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nType\n \n},\n \nDefs\n),\n\n          \ncase\n \ncircular\n(\nDefs\n,\n \nChildren\n,\n \n[\nType\n \n|\n \nPath\n])\n \nof\n\n            \nfalse\n \n->\n \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n);\n\n            \ntrue\n  \n->\n \ntrue\n\n          \nend\n;\n\n        \ntrue\n \n->\n\n          \nType\n \n==\n \nlists\n:\nlast\n(\nPath\n)\n \nandalso\n\n            \n(\nlength\n(\nPath\n)\n \n==\n \n1\n \norelse\n \nnot\n \nis_tree\n(\nPath\n))\n\n      \nend\n;\n\n    \n_\n \n->\n\n      \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n)\n\n  \nend\n.\n\n\n\n\n\n\n\nF#\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n/// Asynchronously download retangles from the server\n\n\n/// and decode the JSON format to F# Rectangle record\n\n\nlet\n \n[<\nJs\n>]\n \ngetRectangles\n \n()\n \n:\n \nAsync\n<\nRectangle\n[]\n>\n \n=\n \nasync\n \n{\n\n  \nlet\n \nreq\n \n=\n \nXMLHttpRequest\n()\n\n  \nreq\n.\nOpen\n(\n\"POST\"\n,\n \n\"/get\"\n,\n \ntrue\n)\n\n  \nlet!\n \nresp\n \n=\n \nreq\n.\nAsyncSend\n()\n\n  \nreturn\n \nJSON\n.\nparse\n(\nresp\n)\n \n}\n\n\n\n/// Repeatedly update rectangles after 0.5 sec\n\n\nlet\n \n[<\nJs\n>]\n \nupdateLoop\n \n()\n \n=\n \nasync\n \n{\n\n  \nwhile\n \ntrue\n \ndo\n\n    \ndo\n!\n \nAsync\n.\nSleep\n(\n500\n)\n\n    \nlet!\n \nrects\n \n=\n \ngetRectangles\n()\n\n    \ncleanRectangles\n()\n\n    \nrects\n \n|>\n \nArray\n.\niter\n \ncreateRectangle\n \n}\n\n\n\n\n\n\n\nGo\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\npackage\n \nmain\n\n\n\nimport\n \n\"fmt\"\n\n\n\nfunc\n \ncounter\n(\nid\n \nint\n,\n \nchannel\n \nchan\n \nint\n,\n \ncloser\n \nbool\n)\n \n{\n\n  \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n<\n \n10000000\n;\n \ni\n++\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\"process\"\n,\n \nid\n,\n\" send\"\n,\n \ni\n)\n\n    \nchannel\n \n<-\n \n1\n\n  \n}\n\n  \nif\n \ncloser\n \n{\n \nclose\n(\nchannel\n \n)\n \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n  \nchannel\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n  \ngo\n \ncounter\n(\n1\n,\n \nchannel\n,\n \nfalse\n)\n\n  \ngo\n \ncounter\n(\n2\n,\n \nchannel\n,\n \ntrue\n)\n\n\n  \nx\n \n:=\n \n0\n\n\n  \n// receiving data from channel\n\n  \nfor\n \ni\n \n:=\n \nrange\n \nchannel\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\"receiving\"\n)\n\n    \nx\n \n+=\n \ni\n\n  \n}\n\n\n  \nfmt\n.\nPrintln\n(\nx\n)\n\n\n}\n\n\n\n\n\n\n\nHTML\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<!doctype html>\n\n\n<\nhtml\n \nclass\n=\n\"no-js\"\n \nlang\n=\n\"\"\n>\n\n  \n<\nhead\n>\n\n    \n<\nmeta\n \ncharset\n=\n\"utf-8\"\n>\n\n    \n<\nmeta\n \nhttp-equiv\n=\n\"x-ua-compatible\"\n \ncontent\n=\n\"ie=edge\"\n>\n\n    \n<\ntitle\n>\nHTML5 Boilerplate\n</\ntitle\n>\n\n    \n<\nmeta\n \nname\n=\n\"description\"\n \ncontent\n=\n\"\"\n>\n\n    \n<\nmeta\n \nname\n=\n\"viewport\"\n \ncontent\n=\n\"width=device-width, initial-scale=1\"\n>\n\n\n    \n<\nlink\n \nrel\n=\n\"apple-touch-icon\"\n \nhref\n=\n\"apple-touch-icon.png\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/normalize.css\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/main.css\"\n>\n\n    \n<\nscript\n \nsrc\n=\n\"js/vendor/modernizr-2.8.3.min.js\"\n></\nscript\n>\n\n  \n</\nhead\n>\n\n  \n<\nbody\n>\n\n    \n<\np\n>\nHello world! This is HTML5 Boilerplate.\n</\np\n>\n\n  \n</\nbody\n>\n\n\n</\nhtml\n>\n\n\n\n\n\n\n\nJava\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\nimport\n \njava.util.LinkedList\n;\n\n\nimport\n \njava.lang.reflect.Array\n;\n\n\n\npublic\n \nclass\n \nUnsortedHashSet\n<\nE\n>\n \n{\n\n\n  \nprivate\n \nstatic\n \nfinal\n \ndouble\n \nLOAD_FACTOR_LIMIT\n \n=\n \n0.7\n;\n\n\n  \nprivate\n \nint\n \nsize\n;\n\n  \nprivate\n \nLinkedList\n<\nE\n>[]\n \ncon\n;\n\n\n  \npublic\n \nUnsortedHashSet\n()\n \n{\n\n    \ncon\n  \n=\n \n(\nLinkedList\n<\nE\n>[])(\nnew\n \nLinkedList\n[\n10\n]);\n\n  \n}\n\n\n  \npublic\n \nboolean\n \nadd\n(\nE\n \nobj\n)\n \n{\n\n    \nint\n \noldSize\n \n=\n \nsize\n;\n\n    \nint\n \nindex\n \n=\n \nMath\n.\nabs\n(\nobj\n.\nhashCode\n())\n \n%\n \ncon\n.\nlength\n;\n\n    \nif\n \n(\ncon\n[\nindex\n]\n \n==\n \nnull\n)\n\n      \ncon\n[\nindex\n]\n \n=\n \nnew\n \nLinkedList\n<\nE\n>();\n\n    \nif\n \n(!\ncon\n[\nindex\n].\ncontains\n(\nobj\n))\n \n{\n\n      \ncon\n[\nindex\n].\nadd\n(\nobj\n);\n\n      \nsize\n++;\n\n    \n}\n\n    \nif\n \n(\n1.0\n \n*\n \nsize\n \n/\n \ncon\n.\nlength\n \n>\n \nLOAD_FACTOR_LIMIT\n)\n\n      \nresize\n();\n\n    \nreturn\n \noldSize\n \n!=\n \nsize\n;\n\n  \n}\n\n\n  \nprivate\n \nvoid\n \nresize\n()\n \n{\n\n    \nUnsortedHashSet\n<\nE\n>\n \ntemp\n \n=\n \nnew\n \nUnsortedHashSet\n<\nE\n>();\n\n    \ntemp\n.\ncon\n \n=\n \n(\nLinkedList\n<\nE\n>[])(\nnew\n \nLinkedList\n[\ncon\n.\nlength\n \n*\n \n2\n \n+\n \n1\n]);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<\n \ncon\n.\nlength\n;\n \ni\n++)\n \n{\n\n      \nif\n \n(\ncon\n[\ni\n]\n \n!=\n \nnull\n)\n\n        \nfor\n \n(\nE\n \ne\n \n:\n \ncon\n[\ni\n])\n\n          \ntemp\n.\nadd\n(\ne\n);\n\n    \n}\n\n    \ncon\n \n=\n \ntemp\n.\ncon\n;\n\n  \n}\n\n\n  \npublic\n \nint\n \nsize\n()\n \n{\n\n    \nreturn\n \nsize\n;\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nJavaScript\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nvar\n \nMath\n \n=\n \nrequire\n(\n'lib/math'\n);\n\n\n\nvar\n \n_extends\n \n=\n \nfunction\n \n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\nvar\n \ne\n \n=\n \nexports\n.\ne\n \n=\n \n2.71828182846\n;\n\n\nexports\n[\n'default'\n]\n \n=\n \nfunction\n \n(\nx\n)\n \n{\n\n  \nreturn\n \nMath\n.\nexp\n(\nx\n);\n\n\n};\n\n\n\nmodule\n.\nexports\n \n=\n \n_extends\n(\nexports\n[\n'default'\n],\n \nexports\n);\n\n\n\n\n\n\n\nJSON\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n{\n\n  \n\"name\"\n:\n \n\"mkdocs-material\"\n,\n\n  \n\"version\"\n:\n \n\"0.2.4\"\n,\n\n  \n\"description\"\n:\n \n\"A Material Design theme for MkDocs\"\n,\n\n  \n\"homepage\"\n:\n \n\"http://squidfunk.github.io/mkdocs-material/\"\n,\n\n  \n\"authors\"\n:\n \n[\n\n    \n\"squidfunk <martin.donath@squidfunk.com>\"\n\n  \n],\n\n  \n\"license\"\n:\n \n\"MIT\"\n,\n\n  \n\"main\"\n:\n \n\"Gulpfile.js\"\n,\n\n  \n\"scripts\"\n:\n \n{\n\n    \n\"start\"\n:\n \n\"./node_modules/.bin/gulp watch --mkdocs\"\n,\n\n    \n\"build\"\n:\n \n\"./node_modules/.bin/gulp build --production\"\n\n  \n}\n\n  \n...\n\n\n}\n\n\n\n\n\n\n\nJulia\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\nusing\n \nMXNet\n\n\n\nmlp\n \n=\n \n@mx\n.\nchain\n \nmx\n.\nVariable\n(\n:\ndata\n)\n             \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc1\n,\n \nnum_hidden\n=\n128\n)\n \n=>\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu1\n,\n \nact_type\n=:\nrelu\n)\n   \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc2\n,\n \nnum_hidden\n=\n64\n)\n  \n=>\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu2\n,\n \nact_type\n=:\nrelu\n)\n   \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc3\n,\n \nnum_hidden\n=\n10\n)\n  \n=>\n\n  \nmx\n.\nSoftmaxOutput\n(\nname\n=:\nsoftmax\n)\n\n\n\n# data provider\n\n\nbatch_size\n \n=\n \n100\n\n\ninclude\n(\nPkg\n.\ndir\n(\n\"MXNet\"\n,\n \n\"examples\"\n,\n \n\"mnist\"\n,\n \n\"mnist-data.jl\"\n))\n\n\ntrain_provider\n,\n \neval_provider\n \n=\n \nget_mnist_providers\n(\nbatch_size\n)\n\n\n\n# setup model\n\n\nmodel\n \n=\n \nmx\n.\nFeedForward\n(\nmlp\n,\n \ncontext\n=\nmx\n.\ncpu\n())\n\n\n\n# optimization algorithm\n\n\noptimizer\n \n=\n \nmx\n.\nSGD\n(\nlr\n=\n0.1\n,\n \nmomentum\n=\n0.9\n)\n\n\n\n# fit parameters\n\n\nmx\n.\nfit\n(\nmodel\n,\n \noptimizer\n,\n \ntrain_provider\n,\n \nn_epoch\n=\n20\n,\n \neval_data\n=\neval_provider\n)\n\n\n\n\n\n\n\nLua\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\nlocal\n \nffi\n \n=\n \nrequire\n(\n\"ffi\"\n)\n\n\n\nffi\n.\ncdef\n[[\n\n\n  void Sleep(int ms);\n\n\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n\n\n]]\n\n\n\nlocal\n \nsleep\n\n\nif\n \nffi\n.\nos\n \n==\n \n\"Windows\"\n \nthen\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\nSleep\n(\ns\n*\n1000\n)\n\n  \nend\n\n\nelse\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\npoll\n(\nnil\n,\n \n0\n,\n \ns\n \n*\n \n1000\n)\n\n  \nend\n\n\nend\n\n\n\nfor\n \ni\n \n=\n \n1\n,\n160\n \ndo\n\n  \nio.write\n(\n\".\"\n);\n \nio.flush\n()\n\n  \nsleep\n(\n0.01\n)\n\n\nend\n\n\nio.write\n(\n\"\n\\n\n\"\n)\n\n\n\n\n\n\n\nMySQL\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n'087652'\n;\n\n\n\n\n\n\n\nPHP\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n<?php\n\n\n\n// src/AppBundle/Controller/LuckyController.php\n\n\nnamespace\n \nAppBundle\\Controller\n;\n\n\n\nuse\n \nSensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route\n;\n\n\nuse\n \nSymfony\\Component\\HttpFoundation\\Response\n;\n\n\n\nclass\n \nLuckyController\n \n{\n\n\n  \n/**\n\n\n   * @Route(\"/lucky/number\")\n\n\n   */\n\n  \npublic\n \nfunction\n \nnumberAction\n()\n \n{\n\n    \n$number\n \n=\n \nmt_rand\n(\n0\n,\n \n100\n);\n\n\n    \nreturn\n \nnew\n \nResponse\n(\n\n      \n'<html><body>Lucky number: '\n.\n$number\n.\n'</body></html>'\n\n    \n);\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nProtocol Buffers\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\nsyntax\n \n=\n \n\"proto2\"\n;\n\n\n\npackage\n \ncaffe\n;\n\n\n\n// Specifies the shape (dimensions) of a Blob.\n\n\nmessage\n \nBlobShape\n \n{\n\n  \nrepeated\n \nint64\n \ndim\n \n=\n \n1\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n}\n\n\n\nmessage\n \nBlobProto\n \n{\n\n  \noptional\n \nBlobShape\n \nshape\n \n=\n \n7\n;\n\n  \nrepeated\n \nfloat\n \ndata\n \n=\n \n5\n \n[\npacked\n \n=\n \ntrue\n];\n\n  \nrepeated\n \nfloat\n \ndiff\n \n=\n \n6\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n  \n// 4D dimensions -- deprecated.  Use \"shape\" instead.\n\n  \noptional\n \nint32\n \nnum\n \n=\n \n1\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nchannels\n \n=\n \n2\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nheight\n \n=\n \n3\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nwidth\n \n=\n \n4\n \n[\ndefault\n \n=\n \n0\n];\n\n\n}\n\n\n\n\n\n\n\nPython\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\"\"\"\n\n\n  A very simple MNIST classifier.\n\n\n  See extensive documentation at\n\n\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\n\n\"\"\"\n\n\nfrom\n \n__future__\n \nimport\n \nabsolute_import\n\n\nfrom\n \n__future__\n \nimport\n \ndivision\n\n\nfrom\n \n__future__\n \nimport\n \nprint_function\n\n\n\n# Import data\n\n\nfrom\n \ntensorflow.examples.tutorials.mnist\n \nimport\n \ninput_data\n\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\nflags\n \n=\n \ntf\n.\napp\n.\nflags\n\n\nFLAGS\n \n=\n \nflags\n.\nFLAGS\n\n\nflags\n.\nDEFINE_string\n(\n'data_dir'\n,\n \n'/tmp/data/'\n,\n \n'Directory for storing data'\n)\n\n\n\nmnist\n \n=\n \ninput_data\n.\nread_data_sets\n(\nFLAGS\n.\ndata_dir\n,\n \none_hot\n=\nTrue\n)\n\n\n\nsess\n \n=\n \ntf\n.\nInteractiveSession\n()\n\n\n\n# Create the model\n\n\nx\n \n=\n \ntf\n.\nplaceholder\n(\ntf\n.\nfloat32\n,\n \n[\nNone\n,\n \n784\n])\n\n\nW\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n784\n,\n \n10\n]))\n\n\nb\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n10\n]))\n\n\ny\n \n=\n \ntf\n.\nnn\n.\nsoftmax\n(\ntf\n.\nmatmul\n(\nx\n,\n \nW\n)\n \n+\n \nb\n)\n\n\n\n\n\n\n\nRuby\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\nrequire\n \n'finity/event'\n\n\nrequire\n \n'finity/machine'\n\n\nrequire\n \n'finity/state'\n\n\nrequire\n \n'finity/transition'\n\n\nrequire\n \n'finity/version'\n\n\n\nmodule\n \nFinity\n\n  \nclass\n \nInvalidCallback\n \n<\n \nStandardError\n;\n \nend\n\n  \nclass\n \nMissingCallback\n \n<\n \nStandardError\n;\n \nend\n\n  \nclass\n \nInvalidState\n    \n<\n \nStandardError\n;\n \nend\n\n\n  \n# Class methods to be injected into the including class upon inclusion.\n\n  \nmodule\n \nClassMethods\n\n\n    \n# Instantiate a new state machine for the including class by accepting a\n\n    \n# block with state and event (and subsequent transition) definitions.\n\n    \ndef\n \nfinity\n \noptions\n \n=\n \n{},\n \n&\nblock\n\n      \n@finity\n \n||=\n \nMachine\n.\nnew\n \nself\n,\n \noptions\n,\n \n&\nblock\n\n    \nend\n\n\n    \n# Return the names of all registered states.\n\n    \ndef\n \nstates\n\n      \n@finity\n.\nstates\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n\n    \n# Return the names of all registered events.\n\n    \ndef\n \nevents\n\n      \n@finity\n.\nevents\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n  \nend\n\n\n  \n# Inject methods into the including class upon inclusion.\n\n  \ndef\n \nself\n.\nincluded\n \nbase\n\n    \nbase\n.\nextend\n \nClassMethods\n\n  \nend\n\n\nend\n\n\n\n\n\n\n\nXML\n\u00b6\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n<!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]>\n\n\n<?oxygen RNGSchema=\"some.rng\" type=\"xml\"?>\n\n\n<xs:main-Tag\n \nxmlns:xs=\n\"http://www.w3.org/2001/XMLSchema\"\n>\n\n  \n<!-- This is a sample comment -->\n\n  \n<childTag\n \nattribute=\n\"Quoted Value\"\n \nanother-attribute=\n'Single quoted value'\n\n      \na-third-attribute=\n'123'\n>\n\n    \n<withTextContent>\nSome text content\n</withTextContent>\n\n    \n<withEntityContent>\nSome text content with \n&lt;\nentities\n&gt;\n and\n      mentioning uint8_t and int32_t\n</withEntityContent>\n\n    \n<otherTag\n \nattribute=\n'Single quoted Value'\n/>\n\n  \n</childTag>\n\n  \n<![CDATA[ some CData ]]>\n\n\n</main-Tag>",
            "title": "Code Highlight"
        },
        {
            "location": "/codehilite/#codehilite",
            "text": "CodeHilite  is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.   Syntax highlighting not working?  Please ensure that  Pygments  is installed. See the next section for\nfurther directions on how to set up Pygments or use the official Docker image  with all dependencies pre-installed.",
            "title": "CodeHilite"
        },
        {
            "location": "/codehilite/#installation",
            "text": "CodeHilite parses code blocks and wraps them in  pre  tags. If  Pygments \nis installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:  1 pip install pygments   To enable CodeHilite, add the following lines to your  mkdocs.yml :  1\n2 markdown_extensions : \n   -   codehilite",
            "title": "Installation"
        },
        {
            "location": "/codehilite/#usage",
            "text": "",
            "title": "Usage"
        },
        {
            "location": "/codehilite/#specifying-the-language",
            "text": "The CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.",
            "title": "Specifying the language"
        },
        {
            "location": "/codehilite/#via-markdown-syntax-recommended",
            "text": "In Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.  Example:  1\n2\n3 ``` python\nimport tensorflow as tf\n```   Result:  1 import   tensorflow   as   tf",
            "title": "via Markdown syntax recommended"
        },
        {
            "location": "/codehilite/#via-shebang",
            "text": "Alternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.  Example:  1\n2     #!/usr/bin/python\n    import tensorflow as tf   Result:  1\n2 #!/usr/bin/python  import   tensorflow   as   tf",
            "title": "via Shebang"
        },
        {
            "location": "/codehilite/#via-three-colons",
            "text": "If the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.  Example:  1\n2     :::python\n    import tensorflow as tf   Result:  1 import   tensorflow   as   tf",
            "title": "via three colons"
        },
        {
            "location": "/codehilite/#adding-line-numbers",
            "text": "Line numbers can be added by enabling the  linenums  flag in your  mkdocs.yml :  1\n2\n3 markdown_extensions : \n   -   codehilite : \n       linenums:true    Example:  1\n2\n3\n4\n5\n6\n7\n8 ``` python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```   Result:  1\n2\n3\n4\n5\n6 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Adding line numbers"
        },
        {
            "location": "/codehilite/#highlighting-specific-lines",
            "text": "Specific lines can be highlighted by passing the line numbers to the  hl_lines \nargument placed right after the language identifier. Line counts start at 1.  Example:  1\n2\n3\n4\n5\n6\n7\n8 ``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```   Result:  1\n2\n3\n4\n5\n6 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ):       for   i   in   range ( len ( items )):           for   j   in   range ( len ( items )   -   1   -   i ):               if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Highlighting specific lines"
        },
        {
            "location": "/codehilite/#supported-languages-excerpt",
            "text": "CodeHilite uses  Pygments , a generic syntax highlighter with support for\nover  300 languages , so the following list of examples is just an excerpt.",
            "title": "Supported languages excerpt"
        },
        {
            "location": "/codehilite/#bash",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34 #!/bin/bash  for  OPT in  \" $@ \"  do \n   case   \" $OPT \"  in\n     '-f'   )    canonicalize = 1   ;; \n     '-n'   )    switchlf = \"-n\"   ;; \n   esac  done  # readlink -f  function  __readlink_f  { \n   target = \" $1 \" \n   while   test  -n  \" $target \" ;   do \n     filepath = \" $target \" \n     cd   ` dirname  \" $filepath \" ` \n     target = ` readlink  \" $filepath \" ` \n   done \n  /bin/echo  $switchlf   ` pwd  -P ` / ` basename  \" $filepath \" `  }  if   [  !  \" $canonicalize \"   ] ;   then \n  readlink  $switchlf   \" $@ \"  else \n   for  file in  \" $@ \" \n   do \n     case   \" $file \"  in\n      -*  )    ;; \n      *   )   __readlink_f  \" $file \"   ;; \n     esac \n     done  fi  exit   $?",
            "title": "Bash"
        },
        {
            "location": "/codehilite/#c",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37 extern   size_t  pb_varint_scan ( const   uint8_t   data [],   size_t   left )   { \n   assert ( data   &&   left ); \n   left   =   left   >   10   ?   10   :   left ;  #ifdef __SSE2__ \n\n   /* Mapping: remaining bytes ==> bitmask */ \n   static   const   int   mask_map []   =   { \n     0x0000 ,   0x0001 ,   0x0003 ,   0x0007 , \n     0x000F ,   0x001F ,   0x003F ,   0x007F , \n     0x00FF ,   0x01FF ,   0x03FF \n   }; \n\n   /* Load buffer into 128-bit integer and create high-bit mask */ \n   __m128i   temp   =   _mm_loadu_si128 (( const   __m128i   * ) data ); \n   __m128i   high   =   _mm_set1_epi8 ( 0x80 ); \n\n   /* Intersect and extract mask with high-bits set */ \n   int   mask   =   _mm_movemask_epi8 ( _mm_and_si128 ( temp ,   high )); \n   mask   =   ( mask   &   mask_map [ left ])   ^   mask_map [ left ]; \n\n   /* Count trailing zeroes */ \n   return   mask   ?   __builtin_ctz ( mask )   +   1   :   0 ;  #else \n\n   /* Linear scan */ \n   size_t   size   =   0 ; \n   while   ( data [ size ++ ]   &   0x80 ) \n     if   ( !-- left ) \n       return   0 ; \n   return   size ;  #endif  /* __SSE2__ */  }",
            "title": "C"
        },
        {
            "location": "/codehilite/#c_1",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33 Extension ::  Extension ( const   Descriptor   * descriptor ,   const   Descriptor   * scope )   : \n     descriptor_ ( descriptor ), \n     scope_ ( scope )   { \n\n   /* Extract full name for signature */ \n   variables_ [ \"signature\" ]   =   descriptor_ -> full_name (); \n\n   /* Prepare message symbol */ \n   variables_ [ \"message\" ]   =   StringReplace ( \n     variables_ [ \"signature\" ],   \".\" ,   \"_\" ,   true ); \n   LowerString ( & ( variables_ [ \"message\" ])); \n\n   /* Suffix scope to identifiers, if given */ \n   string   suffix   ( \"\" ); \n   if   ( scope_ )   { \n     suffix   =   scope_ -> full_name (); \n\n     /* Check if the base and extension types are in the same package */ \n     if   ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) \n       suffix   =   StripPrefixString ( suffix , \n         scope_ -> file () -> package ()   +   \".\" ); \n\n     /* Append to signature */ \n     variables_ [ \"signature\" ]   +=   \".[\"   +   suffix   + \"]\" ; \n     suffix   =   \"_\"   +   suffix ; \n   } \n\n   /* Prepare extension symbol */ \n   variables_ [ \"extension\" ]   =   StringReplace ( \n     suffix ,   \".\" ,   \"_\" ,   true ); \n   LowerString ( & ( variables_ [ \"extension\" ]));  }",
            "title": "C++"
        },
        {
            "location": "/codehilite/#c_2",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22 public   static   void   Send ( \n     Socket   socket ,   byte []   buffer ,   int   offset ,   int   size ,   int   timeout )   { \n   int   startTickCount   =   Environment . TickCount ; \n   int   sent   =   0 ; \n   do   { \n     if   ( Environment . TickCount   >   startTickCount   +   timeout ) \n       throw   new   Exception ( \"Timeout.\" ); \n     try   { \n       sent   +=   socket . Send ( buffer ,   offset   +   sent , \n         size   -   sent ,   SocketFlags . None ); \n     }   catch   ( SocketException   ex )   { \n       if   ( ex . SocketErrorCode   ==   SocketError . WouldBlock   || \n           ex . SocketErrorCode   ==   SocketError . IOPending   || \n           ex . SocketErrorCode   ==   SocketError . NoBufferSpaceAvailable )   { \n         /* Socket buffer is probably full, wait and try again */ \n         Thread . Sleep ( 30 ); \n       }   else   { \n         throw   ex ; \n       } \n     } \n   }   while   ( sent   <   size );  }",
            "title": "C&#35;"
        },
        {
            "location": "/codehilite/#clojure",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34 ( clojure-version )  ( defn  partition-when \n   [ f ] \n   ( fn  [ rf ] \n     ( let  [ a   ( java.util.ArrayList. ) \n           fval   ( volatile!   false )] \n       ( fn \n         ([]   ( rf )) \n         ([ result ] \n            ( let  [ result   ( if  ( .isEmpty   a ) \n                           result \n                           ( let  [ v   ( vec   ( .toArray   a ))] \n                             ;; Clear first \n                             ( .clear   a ) \n                             ( unreduced   ( rf   result   v ))))] \n              ( rf   result ))) \n         ([ result   input ] \n             ( if-not  ( and  ( f   input )    @ fval ) \n                ( do \n                  ( vreset!   fval   true ) \n                  ( .add   a   input ) \n                  result ) \n                ( let  [ v   ( vec   ( .toArray   a ))] \n                  ( .clear   a ) \n                  ( let  [ ret   ( rf   result   v )] \n                    ( when-not  ( reduced?   ret ) \n                      ( .add   a   input )) \n                    ret ))))))))  ( into  []   ( partition-when \n           # ( .startsWith   %   \">>\" )) \n           [ \"1d\"   \"33\"   \">> 1\"   \">> 2\"   \"22\"   \">> 3\" ])",
            "title": "Clojure"
        },
        {
            "location": "/codehilite/#diff",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 Index: grunt.js  ===================================================================  --- grunt.js    (revision 31200)  +++ grunt.js    (working copy)  @@ -12,6 +12,7 @@ \n\n module.exports = function (grunt) { +  console.log('hello world'); \n   // Project configuration.\n   grunt.initConfig({\n     lint: { @@ -19,10 +20,6 @@ \n         'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ], -      scripts: [  -        'grunt.js',  -        'db/**/*.js'  -      ], \n       browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',",
            "title": "Diff"
        },
        {
            "location": "/codehilite/#docker",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 FROM  ubuntu  # Install vnc, xvfb in order to create a 'fake' display and firefox  RUN  apt-get update  &&  apt-get install -y x11vnc xvfb firefox RUN  mkdir ~/.vnc # Setup a password  RUN  x11vnc -storepasswd  1234  ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick)  RUN  bash -c  'echo \"firefox\" >> /.bashrc'  EXPOSE  5900  CMD  [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]",
            "title": "Docker"
        },
        {
            "location": "/codehilite/#elixir",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31 require   Logger  def   accept ( port )   do \n   { :ok ,   socket }   =   :gen_tcp . listen ( port , \n                     [ :binary ,   packet :   :line ,   active :   false ,   reuseaddr :   true ]) \n   Logger . info   \"Accepting connections on port  #{ port } \" \n   loop_acceptor ( socket )  end  defp   loop_acceptor ( socket )   do \n   { :ok ,   client }   =   :gen_tcp . accept ( socket ) \n   serve ( client ) \n   loop_acceptor ( socket )  end  defp   serve ( socket )   do \n   socket \n   |>   read_line () \n   |>   write_line ( socket ) \n\n   serve ( socket )  end  defp   read_line ( socket )   do \n   { :ok ,   data }   =   :gen_tcp . recv ( socket ,   0 ) \n   data  end  defp   write_line ( line ,   socket )   do \n   :gen_tcp . send ( socket ,   line )  end",
            "title": "Elixir"
        },
        {
            "location": "/codehilite/#erlang",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27 circular ( Defs )   -> \n   [   {   {   Type ,   Base   },   Fields   }   || \n     {   {   Type ,   Base   },   Fields   }   <-   Defs ,   Type   ==   msg ,   circular ( Base ,   Defs )   ].  circular ( Base ,   Defs )   -> \n   Fields   =   proplists : get_value ({   msg ,   Base   },   Defs ), \n   circular ( Defs ,   Fields ,   [ Base ]).  circular (_ Defs ,   [],   _ Path )   -> \n   false ;  circular ( Defs ,   [ Field   |   Fields ],   Path )   -> \n   case   Field #field.type   of \n     {   msg ,   Type   }   -> \n       case   lists : member ( Type ,   Path )   of \n         false   -> \n           Children   =   proplists : get_value ({   msg ,   Type   },   Defs ), \n           case   circular ( Defs ,   Children ,   [ Type   |   Path ])   of \n             false   ->   circular ( Defs ,   Fields ,   Path ); \n             true    ->   true \n           end ; \n         true   -> \n           Type   ==   lists : last ( Path )   andalso \n             ( length ( Path )   ==   1   orelse   not   is_tree ( Path )) \n       end ; \n     _   -> \n       circular ( Defs ,   Fields ,   Path ) \n   end .",
            "title": "Erlang"
        },
        {
            "location": "/codehilite/#f",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15 /// Asynchronously download retangles from the server  /// and decode the JSON format to F# Rectangle record  let   [< Js >]   getRectangles   ()   :   Async < Rectangle [] >   =   async   { \n   let   req   =   XMLHttpRequest () \n   req . Open ( \"POST\" ,   \"/get\" ,   true ) \n   let!   resp   =   req . AsyncSend () \n   return   JSON . parse ( resp )   }  /// Repeatedly update rectangles after 0.5 sec  let   [< Js >]   updateLoop   ()   =   async   { \n   while   true   do \n     do !   Async . Sleep ( 500 ) \n     let!   rects   =   getRectangles () \n     cleanRectangles () \n     rects   |>   Array . iter   createRectangle   }",
            "title": "F&#35;"
        },
        {
            "location": "/codehilite/#go",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27 package   main  import   \"fmt\"  func   counter ( id   int ,   channel   chan   int ,   closer   bool )   { \n   for   i   :=   0 ;   i   <   10000000 ;   i ++   { \n     fmt . Println ( \"process\" ,   id , \" send\" ,   i ) \n     channel   <-   1 \n   } \n   if   closer   {   close ( channel   )   }  }  func   main ()   { \n   channel   :=   make ( chan   int ) \n   go   counter ( 1 ,   channel ,   false ) \n   go   counter ( 2 ,   channel ,   true ) \n\n   x   :=   0 \n\n   // receiving data from channel \n   for   i   :=   range   channel   { \n     fmt . Println ( \"receiving\" ) \n     x   +=   i \n   } \n\n   fmt . Println ( x )  }",
            "title": "Go"
        },
        {
            "location": "/codehilite/#html",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <!doctype html>  < html   class = \"no-js\"   lang = \"\" > \n   < head > \n     < meta   charset = \"utf-8\" > \n     < meta   http-equiv = \"x-ua-compatible\"   content = \"ie=edge\" > \n     < title > HTML5 Boilerplate </ title > \n     < meta   name = \"description\"   content = \"\" > \n     < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1\" > \n\n     < link   rel = \"apple-touch-icon\"   href = \"apple-touch-icon.png\" > \n     < link   rel = \"stylesheet\"   href = \"css/normalize.css\" > \n     < link   rel = \"stylesheet\"   href = \"css/main.css\" > \n     < script   src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > \n   </ head > \n   < body > \n     < p > Hello world! This is HTML5 Boilerplate. </ p > \n   </ body >  </ html >",
            "title": "HTML"
        },
        {
            "location": "/codehilite/#java",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43 import   java.util.LinkedList ;  import   java.lang.reflect.Array ;  public   class   UnsortedHashSet < E >   { \n\n   private   static   final   double   LOAD_FACTOR_LIMIT   =   0.7 ; \n\n   private   int   size ; \n   private   LinkedList < E >[]   con ; \n\n   public   UnsortedHashSet ()   { \n     con    =   ( LinkedList < E >[])( new   LinkedList [ 10 ]); \n   } \n\n   public   boolean   add ( E   obj )   { \n     int   oldSize   =   size ; \n     int   index   =   Math . abs ( obj . hashCode ())   %   con . length ; \n     if   ( con [ index ]   ==   null ) \n       con [ index ]   =   new   LinkedList < E >(); \n     if   (! con [ index ]. contains ( obj ))   { \n       con [ index ]. add ( obj ); \n       size ++; \n     } \n     if   ( 1.0   *   size   /   con . length   >   LOAD_FACTOR_LIMIT ) \n       resize (); \n     return   oldSize   !=   size ; \n   } \n\n   private   void   resize ()   { \n     UnsortedHashSet < E >   temp   =   new   UnsortedHashSet < E >(); \n     temp . con   =   ( LinkedList < E >[])( new   LinkedList [ con . length   *   2   +   1 ]); \n     for   ( int   i   =   0 ;   i   <   con . length ;   i ++)   { \n       if   ( con [ i ]   !=   null ) \n         for   ( E   e   :   con [ i ]) \n           temp . add ( e ); \n     } \n     con   =   temp . con ; \n   } \n\n   public   int   size ()   { \n     return   size ; \n   }  }",
            "title": "Java"
        },
        {
            "location": "/codehilite/#javascript",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19 var   Math   =   require ( 'lib/math' );  var   _extends   =   function   ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n\n   return   target ;  };  var   e   =   exports . e   =   2.71828182846 ;  exports [ 'default' ]   =   function   ( x )   { \n   return   Math . exp ( x );  };  module . exports   =   _extends ( exports [ 'default' ],   exports );",
            "title": "JavaScript"
        },
        {
            "location": "/codehilite/#json",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 { \n   \"name\" :   \"mkdocs-material\" , \n   \"version\" :   \"0.2.4\" , \n   \"description\" :   \"A Material Design theme for MkDocs\" , \n   \"homepage\" :   \"http://squidfunk.github.io/mkdocs-material/\" , \n   \"authors\" :   [ \n     \"squidfunk <martin.donath@squidfunk.com>\" \n   ], \n   \"license\" :   \"MIT\" , \n   \"main\" :   \"Gulpfile.js\" , \n   \"scripts\" :   { \n     \"start\" :   \"./node_modules/.bin/gulp watch --mkdocs\" , \n     \"build\" :   \"./node_modules/.bin/gulp build --production\" \n   } \n   ...  }",
            "title": "JSON"
        },
        {
            "location": "/codehilite/#julia",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 using   MXNet  mlp   =   @mx . chain   mx . Variable ( : data )               => \n   mx . FullyConnected ( name =: fc1 ,   num_hidden = 128 )   => \n   mx . Activation ( name =: relu1 ,   act_type =: relu )     => \n   mx . FullyConnected ( name =: fc2 ,   num_hidden = 64 )    => \n   mx . Activation ( name =: relu2 ,   act_type =: relu )     => \n   mx . FullyConnected ( name =: fc3 ,   num_hidden = 10 )    => \n   mx . SoftmaxOutput ( name =: softmax )  # data provider  batch_size   =   100  include ( Pkg . dir ( \"MXNet\" ,   \"examples\" ,   \"mnist\" ,   \"mnist-data.jl\" ))  train_provider ,   eval_provider   =   get_mnist_providers ( batch_size )  # setup model  model   =   mx . FeedForward ( mlp ,   context = mx . cpu ())  # optimization algorithm  optimizer   =   mx . SGD ( lr = 0.1 ,   momentum = 0.9 )  # fit parameters  mx . fit ( model ,   optimizer ,   train_provider ,   n_epoch = 20 ,   eval_data = eval_provider )",
            "title": "Julia"
        },
        {
            "location": "/codehilite/#lua",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 local   ffi   =   require ( \"ffi\" )  ffi . cdef [[    void Sleep(int ms);    int poll(struct pollfd *fds, unsigned long nfds, int timeout);  ]]  local   sleep  if   ffi . os   ==   \"Windows\"   then \n   function   sleep ( s ) \n     ffi . C . Sleep ( s * 1000 ) \n   end  else \n   function   sleep ( s ) \n     ffi . C . poll ( nil ,   0 ,   s   *   1000 ) \n   end  end  for   i   =   1 , 160   do \n   io.write ( \".\" );   io.flush () \n   sleep ( 0.01 )  end  io.write ( \" \\n \" )",
            "title": "Lua"
        },
        {
            "location": "/codehilite/#mysql",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13 SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   '087652' ;",
            "title": "MySQL"
        },
        {
            "location": "/codehilite/#php",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21 <?php  // src/AppBundle/Controller/LuckyController.php  namespace   AppBundle\\Controller ;  use   Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ;  use   Symfony\\Component\\HttpFoundation\\Response ;  class   LuckyController   { \n\n   /**     * @Route(\"/lucky/number\")     */ \n   public   function   numberAction ()   { \n     $number   =   mt_rand ( 0 ,   100 ); \n\n     return   new   Response ( \n       '<html><body>Lucky number: ' . $number . '</body></html>' \n     ); \n   }  }",
            "title": "PHP"
        },
        {
            "location": "/codehilite/#protocol-buffers",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20 syntax   =   \"proto2\" ;  package   caffe ;  // Specifies the shape (dimensions) of a Blob.  message   BlobShape   { \n   repeated   int64   dim   =   1   [ packed   =   true ];  }  message   BlobProto   { \n   optional   BlobShape   shape   =   7 ; \n   repeated   float   data   =   5   [ packed   =   true ]; \n   repeated   float   diff   =   6   [ packed   =   true ]; \n\n   // 4D dimensions -- deprecated.  Use \"shape\" instead. \n   optional   int32   num   =   1   [ default   =   0 ]; \n   optional   int32   channels   =   2   [ default   =   0 ]; \n   optional   int32   height   =   3   [ default   =   0 ]; \n   optional   int32   width   =   4   [ default   =   0 ];  }",
            "title": "Protocol Buffers"
        },
        {
            "location": "/codehilite/#python",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27 \"\"\"    A very simple MNIST classifier.    See extensive documentation at    http://tensorflow.org/tutorials/mnist/beginners/index.md  \"\"\"  from   __future__   import   absolute_import  from   __future__   import   division  from   __future__   import   print_function  # Import data  from   tensorflow.examples.tutorials.mnist   import   input_data  import   tensorflow   as   tf  flags   =   tf . app . flags  FLAGS   =   flags . FLAGS  flags . DEFINE_string ( 'data_dir' ,   '/tmp/data/' ,   'Directory for storing data' )  mnist   =   input_data . read_data_sets ( FLAGS . data_dir ,   one_hot = True )  sess   =   tf . InteractiveSession ()  # Create the model  x   =   tf . placeholder ( tf . float32 ,   [ None ,   784 ])  W   =   tf . Variable ( tf . zeros ([ 784 ,   10 ]))  b   =   tf . Variable ( tf . zeros ([ 10 ]))  y   =   tf . nn . softmax ( tf . matmul ( x ,   W )   +   b )",
            "title": "Python"
        },
        {
            "location": "/codehilite/#ruby",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36 require   'finity/event'  require   'finity/machine'  require   'finity/state'  require   'finity/transition'  require   'finity/version'  module   Finity \n   class   InvalidCallback   <   StandardError ;   end \n   class   MissingCallback   <   StandardError ;   end \n   class   InvalidState      <   StandardError ;   end \n\n   # Class methods to be injected into the including class upon inclusion. \n   module   ClassMethods \n\n     # Instantiate a new state machine for the including class by accepting a \n     # block with state and event (and subsequent transition) definitions. \n     def   finity   options   =   {},   & block \n       @finity   ||=   Machine . new   self ,   options ,   & block \n     end \n\n     # Return the names of all registered states. \n     def   states \n       @finity . states . map   {   | name ,   _ |   name   } \n     end \n\n     # Return the names of all registered events. \n     def   events \n       @finity . events . map   {   | name ,   _ |   name   } \n     end \n   end \n\n   # Inject methods into the including class upon inclusion. \n   def   self . included   base \n     base . extend   ClassMethods \n   end  end",
            "title": "Ruby"
        },
        {
            "location": "/codehilite/#xml",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 <?xml version=\"1.0\" encoding=\"UTF-8\"?>  <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]>  <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?>  <xs:main-Tag   xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > \n   <!-- This is a sample comment --> \n   <childTag   attribute= \"Quoted Value\"   another-attribute= 'Single quoted value' \n       a-third-attribute= '123' > \n     <withTextContent> Some text content </withTextContent> \n     <withEntityContent> Some text content with  &lt; entities &gt;  and\n      mentioning uint8_t and int32_t </withEntityContent> \n     <otherTag   attribute= 'Single quoted Value' /> \n   </childTag> \n   <![CDATA[ some CData ]]>  </main-Tag>",
            "title": "XML"
        },
        {
            "location": "/admonition/",
            "text": "Admonition\n\u00b6\n\n\nAdmonition\n is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.\n\n\nInstallation\n\u00b6\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\n1\n2\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\n\nUsage\n\u00b6\n\n\nAdmonition blocks follow a simple syntax: every block is started with \n!!!\n,\nfollowed by a single keyword which is used as the \ntype qualifier\n of the\nblock. The content of the block then follows on the next line, indented by\nfour spaces.\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nChanging the title\n\u00b6\n\n\nBy default, the block title will equal the type qualifier in titlecase. However,\nit can easily be changed by adding a quoted string after the type qualifier.\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nPhasellus posuere in sem ut cursus\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nRemoving the title\n\u00b6\n\n\nSimilar to setting a \ncustom title\n, the icon and title can be omitted by\nproviding an empty string after the type qualifier:\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! note \"\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nEmbedded code blocks\n\u00b6\n\n\nBlocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.\n\n\nHowever, the \nPyMdown Extensions\n package adds an extension called\n\nSuperFences\n, which makes it possible to nest code blocks within other\nblocks, respectively Admonition blocks.\n\n\nExample:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n'087652'\n;\n\n\n\n\n\n\n\nNunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.\n\n\n\n\nCollapsible blocks\n\u00b6\n\n\nThe \nDetails\n extension which is also part of the \nPyMdown Extensions\n\npackage adds support for rendering collapsible Admonition blocks. This is\nuseful for FAQs or content that is of secondary nature.\n\n\nExample:\n\n\n1\n2\n3\n4\n??? note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\nPhasellus posuere in sem ut cursus\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\nBy adding a \n+\n sign directly after the start marker, blocks can be rendered\nopen by default.\n\n\nTypes\n\u00b6\n\n\nAdmonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers provided by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is \nnote\n.\n\n\nNote\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nnote\n\n\nseealso\n\n\n\n\nAbstract\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! abstract\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nAbstract\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nabstract\n\n\nsummary\n\n\ntldr\n\n\n\n\nInfo\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! info\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nInfo\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ninfo\n\n\ntodo\n\n\n\n\nTip\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nTip\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ntip\n\n\nhint\n\n\nimportant\n\n\n\n\nSuccess\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nSuccess\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nsuccess\n\n\ncheck\n\n\ndone\n\n\n\n\nQuestion\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! question\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nQuestion\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nquestion\n\n\nhelp\n\n\nfaq\n\n\n\n\nWarning\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nWarning\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nwarning\n\n\ncaution\n\n\nattention\n\n\n\n\nFailure\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nFailure\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nfailure\n\n\nfail\n\n\nmissing\n\n\n\n\nDanger\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nDanger\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ndanger\n\n\nerror\n\n\n\n\nBug\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nBug\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nbug\n\n\n\n\nExample\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! example\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nExample\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nexample\n\n\nsnippet\n\n\n\n\nQuote\n\u00b6\n\n\nExample:\n\n\n1\n2\n3\n4\n!!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\n\nResult:\n\n\n\n\nQuote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nquote\n\n\ncite",
            "title": "Admonition"
        },
        {
            "location": "/admonition/#admonition",
            "text": "Admonition  is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.",
            "title": "Admonition"
        },
        {
            "location": "/admonition/#installation",
            "text": "Add the following lines to your  mkdocs.yml :  1\n2 markdown_extensions : \n   -   admonition",
            "title": "Installation"
        },
        {
            "location": "/admonition/#usage",
            "text": "Admonition blocks follow a simple syntax: every block is started with  !!! ,\nfollowed by a single keyword which is used as the  type qualifier  of the\nblock. The content of the block then follows on the next line, indented by\nfour spaces.  Example:  1\n2\n3\n4 !!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Usage"
        },
        {
            "location": "/admonition/#changing-the-title",
            "text": "By default, the block title will equal the type qualifier in titlecase. However,\nit can easily be changed by adding a quoted string after the type qualifier.  Example:  1\n2\n3\n4 !!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Phasellus posuere in sem ut cursus  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Changing the title"
        },
        {
            "location": "/admonition/#removing-the-title",
            "text": "Similar to setting a  custom title , the icon and title can be omitted by\nproviding an empty string after the type qualifier:  Example:  1\n2\n3\n4 !!! note \"\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Removing the title"
        },
        {
            "location": "/admonition/#embedded-code-blocks",
            "text": "Blocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.  However, the  PyMdown Extensions  package adds an extension called SuperFences , which makes it possible to nest code blocks within other\nblocks, respectively Admonition blocks.  Example:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13 SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   '087652' ;    Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.",
            "title": "Embedded code blocks"
        },
        {
            "location": "/admonition/#collapsible-blocks",
            "text": "The  Details  extension which is also part of the  PyMdown Extensions \npackage adds support for rendering collapsible Admonition blocks. This is\nuseful for FAQs or content that is of secondary nature.  Example:  1\n2\n3\n4 ??? note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:  Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa. By adding a  +  sign directly after the start marker, blocks can be rendered\nopen by default.",
            "title": "Collapsible blocks"
        },
        {
            "location": "/admonition/#types",
            "text": "Admonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers provided by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is  note .",
            "title": "Types"
        },
        {
            "location": "/admonition/#note",
            "text": "Example:  1\n2\n3\n4 !!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   note  seealso",
            "title": "Note"
        },
        {
            "location": "/admonition/#abstract",
            "text": "Example:  1\n2\n3\n4 !!! abstract\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Abstract  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   abstract  summary  tldr",
            "title": "Abstract"
        },
        {
            "location": "/admonition/#info",
            "text": "Example:  1\n2\n3\n4 !!! info\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Info  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   info  todo",
            "title": "Info"
        },
        {
            "location": "/admonition/#tip",
            "text": "Example:  1\n2\n3\n4 !!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Tip  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   tip  hint  important",
            "title": "Tip"
        },
        {
            "location": "/admonition/#success",
            "text": "Example:  1\n2\n3\n4 !!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Success  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   success  check  done",
            "title": "Success"
        },
        {
            "location": "/admonition/#question",
            "text": "Example:  1\n2\n3\n4 !!! question\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Question  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   question  help  faq",
            "title": "Question"
        },
        {
            "location": "/admonition/#warning",
            "text": "Example:  1\n2\n3\n4 !!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Warning  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   warning  caution  attention",
            "title": "Warning"
        },
        {
            "location": "/admonition/#failure",
            "text": "Example:  1\n2\n3\n4 !!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Failure  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   failure  fail  missing",
            "title": "Failure"
        },
        {
            "location": "/admonition/#danger",
            "text": "Example:  1\n2\n3\n4 !!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Danger  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   danger  error",
            "title": "Danger"
        },
        {
            "location": "/admonition/#bug",
            "text": "Example:  1\n2\n3\n4 !!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Bug  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   bug",
            "title": "Bug"
        },
        {
            "location": "/admonition/#example",
            "text": "Example:  1\n2\n3\n4 !!! example\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Example  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   example  snippet",
            "title": "Example"
        },
        {
            "location": "/admonition/#quote",
            "text": "Example:  1\n2\n3\n4 !!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Quote  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   quote  cite",
            "title": "Quote"
        },
        {
            "location": "/admonition-usage/",
            "text": "Note\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nAbstract\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nInfo\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nTip\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nSuccess\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nQuestion\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nWarning\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nFailure\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nDanger\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nBug\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nExample\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nQuote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Admonition"
        },
        {
            "location": "/tree/",
            "text": "Section One\n\u00b6\n\n\nSection 1.1\n\u00b6\n\n\n1\n2\n3\n4\n5\nimport\n \n<\niostream\n>\n\n\n\nint\n \nmain\n()\n \n{\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\n\n\n\nHello my name is \nZack Herrick\n\n\nBlock Quote\n\n\n\n\nAnother\n\n\n\n\nOne More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutomatically generated files\n\n\nNever make any changes in the \nmaterial\n directory, as the contents of this\ndirectory are automatically generated from the \nsrc\n directory and will be\noverriden when the theme is built.\n\n\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n\nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n    \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n\n}\n\n\nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\n\nPraesent at \nreturn\n \ntarget\n, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "One"
        },
        {
            "location": "/tree/#section-one",
            "text": "",
            "title": "Section One"
        },
        {
            "location": "/tree/#section-11",
            "text": "1\n2\n3\n4\n5 import   < iostream >  int   main ()   { \n     return   0 ;  }     Hello my name is  Zack Herrick  Block Quote   Another   One More        Automatically generated files  Never make any changes in the  material  directory, as the contents of this\ndirectory are automatically generated from the  src  directory and will be\noverriden when the theme is built.    Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh. 1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   {  for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   {       var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n     target [ key ]   =   source [ key ]; \n     }  }  return   target ;  };     Praesent at  return   target , sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "Section 1.1"
        },
        {
            "location": "/tree/",
            "text": "Section One\n\u00b6\n\n\nSection 1.1\n\u00b6\n\n\n1\n2\n3\n4\n5\nimport\n \n<\niostream\n>\n\n\n\nint\n \nmain\n()\n \n{\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\n\n\n\nHello my name is \nZack Herrick\n\n\nBlock Quote\n\n\n\n\nAnother\n\n\n\n\nOne More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutomatically generated files\n\n\nNever make any changes in the \nmaterial\n directory, as the contents of this\ndirectory are automatically generated from the \nsrc\n directory and will be\noverriden when the theme is built.\n\n\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n\nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n    \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n\n}\n\n\nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\n\nPraesent at \nreturn\n \ntarget\n, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "TwoTwo"
        },
        {
            "location": "/tree/#section-one",
            "text": "",
            "title": "Section One"
        },
        {
            "location": "/tree/#section-11",
            "text": "1\n2\n3\n4\n5 import   < iostream >  int   main ()   { \n     return   0 ;  }     Hello my name is  Zack Herrick  Block Quote   Another   One More        Automatically generated files  Never make any changes in the  material  directory, as the contents of this\ndirectory are automatically generated from the  src  directory and will be\noverriden when the theme is built.    Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh. 1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   {  for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   {       var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n     target [ key ]   =   source [ key ]; \n     }  }  return   target ;  };     Praesent at  return   target , sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "Section 1.1"
        },
        {
            "location": "/tree/",
            "text": "Section One\n\u00b6\n\n\nSection 1.1\n\u00b6\n\n\n1\n2\n3\n4\n5\nimport\n \n<\niostream\n>\n\n\n\nint\n \nmain\n()\n \n{\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\n\n\n\n\nHello my name is \nZack Herrick\n\n\nBlock Quote\n\n\n\n\nAnother\n\n\n\n\nOne More\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutomatically generated files\n\n\nNever make any changes in the \nmaterial\n directory, as the contents of this\ndirectory are automatically generated from the \nsrc\n directory and will be\noverriden when the theme is built.\n\n\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n\nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n    \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n\n}\n\n\nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\n\nPraesent at \nreturn\n \ntarget\n, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "Three"
        },
        {
            "location": "/tree/#section-one",
            "text": "",
            "title": "Section One"
        },
        {
            "location": "/tree/#section-11",
            "text": "1\n2\n3\n4\n5 import   < iostream >  int   main ()   { \n     return   0 ;  }     Hello my name is  Zack Herrick  Block Quote   Another   One More        Automatically generated files  Never make any changes in the  material  directory, as the contents of this\ndirectory are automatically generated from the  src  directory and will be\noverriden when the theme is built.    Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh. 1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   {  for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   {       var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n     target [ key ]   =   source [ key ]; \n     }  }  return   target ;  };     Praesent at  return   target , sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "Section 1.1"
        },
        {
            "location": "/",
            "text": "Welcome to MkDocs\n\u00b6\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\n1\n2\n3\n{\n\n    \n\"hello\"\n:\n \n\"cool\"\n\n\n}\n\n\n\n\n\n\n\n1\n2\ndef\n \n__init\n(\nself\n):\n\n    \nreturn\n \nhello\n.\nasd\n\n\n\n\n\n\n\n\n\n Lorem ipsum dolor sit amet, consectetur adipiscing elit\n\n\n Nulla lobortis egestas semper\n\n\n Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n\n\n Vestibulum convallis sit amet nisi a tincidunt\n\n\n In hac habitasse platea dictumst\n\n\n In scelerisque nibh non dolor mollis congue sed et metus\n\n\n Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n\n\n Praesent sed risus massa\n\n\n\n\n\n\n Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n\n\n\n\n Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\n\n\nConert this \u2192 (this)\n\n\n\n\n\n\nHello My name is\n\n\n\n\n\n\nInline text highlight\n\u00b6\n\n\nText can be \ndeleted\n and replacement text \nadded\n. This can also be\ncombined into \none\na single\n operation. \nHighlighting\n is also\npossible \nand comments can be added inline\n.\n\n\nDetails\n\u00b6\n\n\n[Details][11] adds collapsible [Admonition-style blocks][12] which can contain\narbitrary content using the HTML5 \ndetails\n and \nsummary\n tags. Additionally,\nall Admonition qualifiers can be used, e.g. \nnote\n, \nquestion\n, \nwarning\n etc.:\n\n\nsjdhsahdsd asdasd\nYes.\nsjdhsahdsd asdasd\nYes.\nEmoji\n\u00b6\n\n\n[Emoji][13] adds the -load of emojis that we use in\nour daily lives. See the [EmojiOne demo][14] for a list of all available\nemojis. Happy scrolling \n\n\nSmartSymbols\n\u00b6\n\n\n[SmartSymbols][21] converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).",
            "title": "Another"
        },
        {
            "location": "/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .  1\n2\n3 { \n     \"hello\" :   \"cool\"  }    1\n2 def   __init ( self ): \n     return   hello . asd      Lorem ipsum dolor sit amet, consectetur adipiscing elit   Nulla lobortis egestas semper   Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est   Vestibulum convallis sit amet nisi a tincidunt   In hac habitasse platea dictumst   In scelerisque nibh non dolor mollis congue sed et metus   Sed egestas felis quis elit dapibus, ac aliquet turpis mattis   Praesent sed risus massa     Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque    Nulla vel eros venenatis, imperdiet enim id, faucibus nisi    Conert this \u2192 (this)    Hello My name is",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/#inline-text-highlight",
            "text": "Text can be  deleted  and replacement text  added . This can also be\ncombined into  one a single  operation.  Highlighting  is also\npossible  and comments can be added inline .",
            "title": "Inline text highlight"
        },
        {
            "location": "/#details",
            "text": "[Details][11] adds collapsible [Admonition-style blocks][12] which can contain\narbitrary content using the HTML5  details  and  summary  tags. Additionally,\nall Admonition qualifiers can be used, e.g.  note ,  question ,  warning  etc.:  sjdhsahdsd asdasd Yes. sjdhsahdsd asdasd Yes.",
            "title": "Details"
        },
        {
            "location": "/#emoji",
            "text": "[Emoji][13] adds the -load of emojis that we use in\nour daily lives. See the [EmojiOne demo][14] for a list of all available\nemojis. Happy scrolling",
            "title": "Emoji"
        },
        {
            "location": "/#smartsymbols",
            "text": "[SmartSymbols][21] converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).",
            "title": "SmartSymbols"
        }
    ]
}